From 30dbafba2a26d781c8a9b78e7befe6efb26b02df Mon Sep 17 00:00:00 2001
From: Ekansh Gahlot <ekansh22gahlot@gmail.com>
Date: Wed, 28 Jun 2023 13:51:39 +0800
Subject: [PATCH] update

---
 .DS_Store      | Bin 0 -> 6148 bytes
 client3.py     |  64 +++++++++++++++++++++++++++++++++++++++++++++++++
 client_test.py |  30 +++++++++++++++++++++++
 3 files changed, 94 insertions(+)
 create mode 100644 .DS_Store

diff --git a/.DS_Store b/.DS_Store
new file mode 100644
index 0000000000000000000000000000000000000000..04fd46d8e2375993c05d73979fb63f831bab8af6
GIT binary patch
literal 6148
zcmeHK%SyvQ6g?A*v=t;vH$uLkApSsF(uE5*`T<HGh>%*fY0+KwevIGeO3$6Slx9-5
zqH-_Xd**S^WadoBWB|C)dUgh+0J?O+q{pzwq+h&ciMAXPogd=?70xlhBVJqC*6<q@
zkiF|;iW2vjV`u*^%H?!YE+_1lm*bs2`1HmSaNOYBaNp-xG5WoaxWkCs!xhFDqQE6_
zfCXkvhC7WIDV{n06V{xilomSI71<SDP(}Q=h~MYj=45Vs)HgKZd_<h?&YGs=Z<_hZ
zU6jwNnJHijm;!%90iM}n-J^gOO#xHD6xb>t--nDYm@C!+{ilP$Ujc|6HhW`Peiwz4
zDdviGK=#mFpb`Vs=@r8TI@>eN%N6T@fexpa52sIddP8yk=^Q`v>2P^Ki>81n&{W_c
zR8u+s$KT)on<T550;a&fQowbJ>te(u>Dk&^oSd~8{gy5!d3C@og#~{UGgpq{6S_CH
YXHp>MigiG?(CkOR%V5D2_)!JE0L&|4_W%F@

literal 0
HcmV?d00001

diff --git a/client3.py b/client3.py
index e69de29..1ba3de8 100644
--- a/client3.py
+++ b/client3.py
@@ -0,0 +1,64 @@
+################################################################################
+#
+#  Permission is hereby granted, free of charge, to any person obtaining a
+#  copy of this software and associated documentation files (the "Software"),
+#  to deal in the Software without restriction, including without limitation
+#  the rights to use, copy, modify, merge, publish, distribute, sublicense,
+#  and/or sell copies of the Software, and to permit persons to whom the
+#  Software is furnished to do so, subject to the following conditions:
+#
+#  The above copyright notice and this permission notice shall be included in
+#  all copies or substantial portions of the Software.
+#
+#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+#  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+#  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+#  DEALINGS IN THE SOFTWARE.
+
+import json
+import random
+import urllib.request
+
+# Server API URLs
+QUERY = "http://localhost:8080/query?id={}"
+
+# 500 server request
+N = 500
+
+
+print("HELLO")
+def getDataPoint(quote):
+    """ Produce all the needed values to generate a datapoint """
+    """ ------------- Update this function ------------- """
+    stock = quote['stock']
+    bid_price = float(quote['top_bid']['price'])
+    ask_price = float(quote['top_ask']['price'])
+    price = (bid_price + ask_price) / 2 
+    return stock, bid_price, ask_price, price
+
+
+def getRatio(price_a, price_b):
+    """ Get ratio of price_a and price_b """
+    """ ------------- Update this function ------------- """
+    if(price_a == 0):
+        return 
+    return price_a/price_b
+
+
+# Main
+if __name__ == "__main__":
+    # Query the price once every N seconds.
+    for _ in iter(range(N)):
+        quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+
+        """ ----------- Update to get the ratio --------------- """
+        prices={}
+        for quote in quotes:
+            stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock] = price
+            print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+
+        print("Ratio %s" % getRatio(prices["ABC"], prices["DEF"]))
diff --git a/client_test.py b/client_test.py
index e69de29..f54c78f 100644
--- a/client_test.py
+++ b/client_test.py
@@ -0,0 +1,30 @@
+import unittest
+from client3 import getDataPoint
+
+class ClientTest(unittest.TestCase):
+  def test_getDataPoint_calculatePrice(self):
+    quotes = [
+      {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote),(quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price']+quote['top_ask']['price'])/2))
+  
+  def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
+    quotes = [
+      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+      self.assertEqual(getDataPoint(quote),(quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price']+quote['top_ask']['price'])/2))
+
+
+  """ ------------ Add more unit tests ------------ """
+
+
+
+if __name__ == '__main__':
+    unittest.main()
+
-- 
2.39.2 (Apple Git-143)

